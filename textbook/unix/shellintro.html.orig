
<!DOCTYPE html>

<html>
  <head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>4. The Shell - Part I: Having an ASCII conversation with the OS &#8212; UndertheCovers</title>
    
  <link href="../_static/css/theme.css" rel="stylesheet">
  <link href="../_static/css/index.ff1ffe594081f20da1ef19478df9384b.css" rel="stylesheet">

    
  <link rel="stylesheet"
    href="../_static/vendor/fontawesome/5.13.0/css/all.min.css">
  <link rel="preload" as="font" type="font/woff2" crossorigin
    href="../_static/vendor/fontawesome/5.13.0/webfonts/fa-solid-900.woff2">
  <link rel="preload" as="font" type="font/woff2" crossorigin
    href="../_static/vendor/fontawesome/5.13.0/webfonts/fa-brands-400.woff2">

    
      

    
    <link rel="stylesheet" type="text/css" href="../_static/pygments.css" />
    <link rel="stylesheet" type="text/css" href="../_static/sphinx-book-theme.css?digest=c3fdc42140077d1ad13ad2f1588a4309" />
    <link rel="stylesheet" type="text/css" href="../_static/togglebutton.css" />
    <link rel="stylesheet" type="text/css" href="../_static/copybutton.css" />
    <link rel="stylesheet" type="text/css" href="../_static/mystnb.css" />
    <link rel="stylesheet" type="text/css" href="../_static/sphinx-thebe.css" />
    <link rel="stylesheet" type="text/css" href="../_static/panels-main.c949a650a448cc0ae9fd3441c0e17fb0.css" />
    <link rel="stylesheet" type="text/css" href="../_static/panels-variables.06eb56fa6e07937060861dad626602ad.css" />
    
  <link rel="preload" as="script" href="../_static/js/index.be7d3bbb2ef33a8344ce.js">

    <script data-url_root="../" id="documentation_options" src="../_static/documentation_options.js"></script>
    <script src="../_static/jquery.js"></script>
    <script src="../_static/underscore.js"></script>
    <script src="../_static/doctools.js"></script>
    <script src="../_static/togglebutton.js"></script>
    <script src="../_static/clipboard.min.js"></script>
    <script src="../_static/copybutton.js"></script>
    <script async="async" kind="hypothesis" src="https://hypothes.is/embed.js"></script>
    <script>var togglebuttonSelector = '.toggle, .admonition.dropdown, .tag_hide_input div.cell_input, .tag_hide-input div.cell_input, .tag_hide_output div.cell_output, .tag_hide-output div.cell_output, .tag_hide_cell.cell, .tag_hide-cell.cell';</script>
    <script src="../_static/sphinx-book-theme.12a9622fbb08dcb3a2a40b2c02b83a57.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/require.js/2.3.4/require.min.js"></script>
    <script src="https://unpkg.com/@jupyter-widgets/html-manager@^0.20.0/dist/embed-amd.js"></script>
    <script async="async" src="https://unpkg.com/thebe@0.5.1/lib/index.js"></script>
    <script>
        const thebe_selector = ".thebe"
        const thebe_selector_input = "pre"
        const thebe_selector_output = ".output"
    </script>
    <script async="async" src="../_static/sphinx-thebe.js"></script>
    <link rel="index" title="Index" href="../genindex.html" />
    <link rel="search" title="Search" href="../search.html" />
    <link rel="next" title="6. The Shell – Progammable User Interface to the computer" href="shell.html" />
    <link rel="prev" title="3. Organizing and Managing Information as a Tree of Files and Directories" href="files.html" />
    <meta name="viewport" content="width=device-width, initial-scale=1" />
    <meta name="docsearch:language" content="None">
    

    <!-- Google Analytics -->
    
  </head>
  <body data-spy="scroll" data-target="#bd-toc-nav" data-offset="80">
    
    <div class="container-fluid" id="banner"></div>

    

    <div class="container-xl">
      <div class="row">
          
<div class="col-12 col-md-3 bd-sidebar site-navigation show" id="site-navigation">
    
        <div class="navbar-brand-box">
    <a class="navbar-brand text-wrap" href="../index.html">
      
        <!-- `logo` is deprecated in Sphinx 4.0, so remove this when we stop supporting 3 -->
        
      
      
      <img src="../_static/logo.jpg" class="logo" alt="logo">
      
      
      <h1 class="site-logo" id="site-title">UndertheCovers</h1>
      
    </a>
</div><form class="bd-search d-flex align-items-center" action="../search.html" method="get">
  <i class="icon fas fa-search"></i>
  <input type="search" class="form-control" name="q" id="search-input" placeholder="Search this book..." aria-label="Search this book..." autocomplete="off" >
</form><nav class="bd-links" id="bd-docs-nav" aria-label="Main">
    <div class="bd-toc-item active">
        <ul class="nav bd-sidenav">
 <li class="toctree-l1">
  <a class="reference internal" href="../intro_tb.html">
   Under the Covers : The Secret Life of Software
  </a>
 </li>
</ul>
<p aria-level="2" class="caption" role="heading">
 <span class="caption-text">
  How to read this book
 </span>
</p>
<ul class="nav bd-sidenav">
 <li class="toctree-l1">
  <a class="reference internal" href="../howto.html">
   How to read this book
  </a>
 </li>
</ul>
<p aria-level="2" class="caption" role="heading">
 <span class="caption-text">
  The Unix Development Environment
 </span>
</p>
<ul class="current nav bd-sidenav">
 <li class="toctree-l1">
  <a class="reference internal" href="intro.html">
   1. Operating Systems and UNIX
  </a>
 </li>
 <li class="toctree-l1">
  <a class="reference internal" href="terminal.html">
   2. What is a Terminal and why do we still use them?
  </a>
 </li>
 <li class="toctree-l1">
  <a class="reference internal" href="files.html">
   3. Organizing and Managing Information as a Tree of Files and Directories
  </a>
 </li>
 <li class="toctree-l1 current active">
  <a class="current reference internal" href="#">
   4. The Shell - Part I: Having an ASCII conversation with the OS
  </a>
 </li>
 <li class="toctree-l1">
  <a class="reference internal" href="shell.html">
   6. The Shell – Progammable User Interface to the computer
  </a>
 </li>
 <li class="toctree-l1">
  <a class="reference internal" href="editors.html">
   7. Editors
  </a>
 </li>
 <li class="toctree-l1">
  <a class="reference internal" href="processes.html">
   8. Processes
  </a>
 </li>
 <li class="toctree-l1">
  <a class="reference internal" href="ides.html">
   9. IDEs
  </a>
 </li>
 <li class="toctree-l1">
  <a class="reference internal" href="make.html">
   10. Make
  </a>
 </li>
 <li class="toctree-l1">
  <a class="reference internal" href="gitintro.html">
   11. Intro to Git
  </a>
 </li>
 <li class="toctree-l1">
  <a class="reference internal" href="git.html">
   12. Git
  </a>
 </li>
</ul>
<p aria-level="2" class="caption" role="heading">
 <span class="caption-text">
  The Belly of the Beast: The von Neumann Architecture and Assembly Programming
 </span>
</p>
<ul class="nav bd-sidenav">
 <li class="toctree-l1">
  <a class="reference internal" href="../assembly/intro.html">
   13. Introduction: Assembly Programming
  </a>
 </li>
 <li class="toctree-l1">
  <a class="reference internal" href="../assembly/vonNeumannArchitecture.html">
   14. The von Neumann Architecture
  </a>
 </li>
 <li class="toctree-l1">
  <a class="reference internal" href="../assembly/UnixAssemblyProgramming.html">
   15. Executables and Processes
  </a>
 </li>
 <li class="toctree-l1">
  <a class="reference internal" href="../assembly/Debuggers.html">
   16. Machine Debuggers &amp; Open Process Surgery
  </a>
 </li>
 <li class="toctree-l1">
  <a class="reference internal" href="../assembly/assembly.html">
   17. Lets write some assembly code
  </a>
 </li>
 <li class="toctree-l1">
  <a class="reference internal" href="../assembly/InfoRepI.html">
   18. Representing information - Preliminaries: Bits, Bytes and Notation
  </a>
 </li>
 <li class="toctree-l1">
  <a class="reference internal" href="../assembly/nativetypes.html">
   19. Information Representation - Native Types
  </a>
 </li>
 <li class="toctree-l1">
  <a class="reference internal" href="../assembly/anatomyI.html">
   20. Assembly : Program Anatomy I
  </a>
 </li>
 <li class="toctree-l1">
  <a class="reference internal" href="../assembly/anatomyII.html">
   21. Program Anatomy II : Functions
  </a>
 </li>
 <li class="toctree-l1">
  <a class="reference internal" href="../assembly/anatomyIII.html">
   22. Program Anatomy III : Code as Data
  </a>
 </li>
 <li class="toctree-l1">
  <a class="reference internal" href="../assembly/anatomyIV.html">
   23. Program Anatomy IV: The Tree of Bytes and Data Structures
  </a>
 </li>
 <li class="toctree-l1">
  <a class="reference internal" href="../assembly/assemblyOS.html">
   24. Assembly using the OS
  </a>
 </li>
</ul>
<p aria-level="2" class="caption" role="heading">
 <span class="caption-text">
  Into the Light : C Programming
 </span>
</p>
<ul class="nav bd-sidenav">
 <li class="toctree-l1">
  <a class="reference internal" href="../C/intro.html">
   25. Introduction
  </a>
 </li>
 <li class="toctree-l1">
  <a class="reference internal" href="../C/mychapter.html">
   26. New Chapter
  </a>
 </li>
</ul>
<p aria-level="2" class="caption" role="heading">
 <span class="caption-text">
  Course Specific Material
 </span>
</p>
<ul class="nav bd-sidenav">
 <li class="toctree-l1">
  <a class="reference internal" href="../BUCS210_intro.html">
   BU CS210 Overview
  </a>
 </li>
</ul>

    </div>
</nav> <!-- To handle the deprecated key -->

<div class="navbar_extra_footer">
  Powered by <a href="https://jupyterbook.org">Jupyter Book</a>
</div>

</div>


          


          
<main class="col py-md-3 pl-md-4 bd-content overflow-auto" role="main">
    
    <div class="topbar container-xl fixed-top">
    <div class="topbar-contents row">
        <div class="col-12 col-md-3 bd-topbar-whitespace site-navigation show"></div>
        <div class="col pl-md-4 topbar-main">
            
            <button id="navbar-toggler" class="navbar-toggler ml-0" type="button" data-toggle="collapse"
                data-toggle="tooltip" data-placement="bottom" data-target=".site-navigation" aria-controls="navbar-menu"
                aria-expanded="true" aria-label="Toggle navigation" aria-controls="site-navigation"
                title="Toggle navigation" data-toggle="tooltip" data-placement="left">
                <i class="fas fa-bars"></i>
                <i class="fas fa-arrow-left"></i>
                <i class="fas fa-arrow-up"></i>
            </button>
            
            
<div class="dropdown-buttons-trigger">
    <button id="dropdown-buttons-trigger" class="btn btn-secondary topbarbtn" aria-label="Download this page"><i
            class="fas fa-download"></i></button>

    <div class="dropdown-buttons">
        <!-- ipynb file if we had a myst markdown file -->
        
        <!-- Download raw file -->
        <a class="dropdown-buttons" href="../_sources/unix/shellintro.ipynb"><button type="button"
                class="btn btn-secondary topbarbtn" title="Download source file" data-toggle="tooltip"
                data-placement="left">.ipynb</button></a>
        <!-- Download PDF via print -->
        <button type="button" id="download-print" class="btn btn-secondary topbarbtn" title="Print to PDF"
            onClick="window.print()" data-toggle="tooltip" data-placement="left">.pdf</button>
    </div>
</div>

            <!-- Source interaction buttons -->

<div class="dropdown-buttons-trigger">
    <button id="dropdown-buttons-trigger" class="btn btn-secondary topbarbtn"
        aria-label="Connect with source repository"><i class="fab fa-github"></i></button>
    <div class="dropdown-buttons sourcebuttons">
        <a class="repository-button"
            href="https://github.com/jappavoo/UndertheCovers"><button type="button" class="btn btn-secondary topbarbtn"
                data-toggle="tooltip" data-placement="left" title="Source repository"><i
                    class="fab fa-github"></i>repository</button></a>
        <a class="issues-button"
            href="https://github.com/jappavoo/UndertheCovers/issues/new?title=Issue%20on%20page%20%2Funix/shellintro.html&body=Your%20issue%20content%20here."><button
                type="button" class="btn btn-secondary topbarbtn" data-toggle="tooltip" data-placement="left"
                title="Open an issue"><i class="fas fa-lightbulb"></i>open issue</button></a>
        <a class="edit-button" href="https://github.com/jappavoo/UndertheCovers/edit/main/underthecovers/unix/shellintro.ipynb"><button
                type="button" class="btn btn-secondary topbarbtn" data-toggle="tooltip" data-placement="left"
                title="Edit this page"><i class="fas fa-pencil-alt"></i>suggest edit</button></a>
    </div>
</div>

            <!-- Full screen (wrap in <a> to have style consistency -->

<a class="full-screen-button"><button type="button" class="btn btn-secondary topbarbtn" data-toggle="tooltip"
        data-placement="bottom" onclick="toggleFullScreen()" aria-label="Fullscreen mode"
        title="Fullscreen mode"><i
            class="fas fa-expand"></i></button></a>

            <!-- Launch buttons -->

<div class="dropdown-buttons-trigger">
    <button id="dropdown-buttons-trigger" class="btn btn-secondary topbarbtn"
        aria-label="Launch interactive content"><i class="fas fa-rocket"></i></button>
    <div class="dropdown-buttons">
        
        
        <a class="jupyterhub-button" href="https://jupyterhub-opf-jupyterhub.apps.smaug.na.operate-first.cloud/hub/user-redirect/git-pull?repo=https://github.com/jappavoo/UndertheCovers&urlpath=lab/tree/UndertheCovers/underthecovers/unix/shellintro.ipynb&branch=main"><button type="button"
                class="btn btn-secondary topbarbtn" title="Launch JupyterHub" data-toggle="tooltip"
                data-placement="left"><img class="jupyterhub-button-logo"
                    src="../_static/images/logo_jupyterhub.svg"
                    alt="Interact on JupyterHub">JupyterHub</button></a>
        
        
        
    </div>
</div>

        </div>

        <!-- Table of contents -->
        <div class="d-none d-md-block col-md-2 bd-toc show">
            
            <div class="tocsection onthispage pt-5 pb-3">
                <i class="fas fa-list"></i> Contents
            </div>
            <nav id="bd-toc-nav" aria-label="Page">
                <ul class="visible nav section-nav flex-column">
 <li class="toc-h1 nav-item toc-entry">
  <a class="reference internal nav-link" href="#">
   4. The Shell - Part I: Having an ASCII conversation with the OS
  </a>
  <ul class="visible nav section-nav flex-column">
   <li class="toc-h2 nav-item toc-entry">
    <a class="reference internal nav-link" href="#our-interface-to-the-kernel">
     4.1. Our interface to the Kernel
    </a>
   </li>
   <li class="toc-h2 nav-item toc-entry">
    <a class="reference internal nav-link" href="#bash">
     4.2. Bash
    </a>
   </li>
   <li class="toc-h2 nav-item toc-entry">
    <a class="reference internal nav-link" href="#shell-session">
     4.3. Shell Session
    </a>
    <ul class="nav section-nav flex-column">
     <li class="toc-h3 nav-item toc-entry">
      <a class="reference internal nav-link" href="#terminal-windows-and-the-shell">
       4.3.1. Terminal Windows and the Shell
      </a>
     </li>
    </ul>
   </li>
   <li class="toc-h2 nav-item toc-entry">
    <a class="reference internal nav-link" href="#line-oriented-conversation">
     4.4. Line oriented conversation
    </a>
    <ul class="nav section-nav flex-column">
     <li class="toc-h3 nav-item toc-entry">
      <a class="reference internal nav-link" href="#lines">
       4.4.1. Lines
      </a>
     </li>
     <li class="toc-h3 nav-item toc-entry">
      <a class="reference internal nav-link" href="#the-prompt">
       4.4.2. The Prompt
      </a>
     </li>
    </ul>
   </li>
   <li class="toc-h2 nav-item toc-entry">
    <a class="reference internal nav-link" href="#our-first-shell-session">
     4.5. Our first shell session
    </a>
   </li>
  </ul>
 </li>
 <li class="toc-h1 nav-item toc-entry">
  <a class="reference internal nav-link" href="#summary">
   5. Summary
  </a>
 </li>
</ul>

            </nav>
        </div>
    </div>
</div>
    <div id="main-content" class="row">
        <div class="col-12 col-md-9 pl-md-3 pr-md-0">
        
              <div>
                
  <div class="tex2jax_ignore mathjax_ignore section" id="the-shell-part-i-having-an-ascii-conversation-with-the-os">
<h1><span class="section-number">4. </span>The Shell - Part I: Having an ASCII conversation with the OS<a class="headerlink" href="#the-shell-part-i-having-an-ascii-conversation-with-the-os" title="Permalink to this headline">¶</a></h1>
<p>As we read in the Unix <a class="reference internal" href="intro.html"><span class="doc std std-doc">introduction</span></a> a key feature of Unix is its command line interface that was developed for <a class="reference internal" href="terminal.html"><span class="doc std std-doc">ASCII terminals</span></a> devices. Our goal in this chapter is to understand the general model of the shell and how to start working in the terminal environment.  If you have not done so be sure to have read the sections on the Unix <a class="reference external" href="../unix/intro.ipynb#UnixKernel_sec">Kernel</a>, <a class="reference external" href="../unix/intro.html#UnixUser_sec">User Programs</a>, how we <a class="reference external" href="../unix/intro.html#UnixViz_sec">visualize a running Unix system</a>, the introduction to <a class="reference external" href="../unix/terminal.html#TerminalEmulators_sec">Terminal Emulators</a> and the chapter introducing <a class="reference internal" href="files.html"><span class="doc std std-doc">Files and Directories</span></a>.</p>
<blockquote>
<div><p><a class="reference internal" href="../_images/fyi.svg"><img alt="../_images/fyi.svg" class="align-left" src="../_images/fyi.svg" width="40" /></a> <p style="background-color:powderblue;"> It is a good idea to read this chapter with a terminal connection open so that you can explore the material as you read it.  Instructions and guidance on how to do this can be found in <a class="reference external" href="../unix/terminal.html#TerminalEmulators_sec">Terminal Emulators</a>.</p>
</div></blockquote>
<div class="section" id="our-interface-to-the-kernel">
<h2><span class="section-number">4.1. </span>Our interface to the Kernel<a class="headerlink" href="#our-interface-to-the-kernel" title="Permalink to this headline">¶</a></h2>
<a class="reference internal image-reference" href="../_images/04SHLLChat.png"><img alt="../_images/04SHLLChat.png" src="../_images/04SHLLChat.png" style="width: 50%;" /></a>
<p>As discussed the core functionality of the Unix operating system is implemented by the Kernel.  But the kernel is really only responsible for making it easier to run and write application/user programs. The Kernel does not have any support for humans to directly interact with it.  That is where the shell comes in. The shell acts as our primary point of contact/interface not only to the kernel but also all the other programs installed.</p>
</div>
<div class="section" id="bash">
<h2><span class="section-number">4.2. </span>Bash<a class="headerlink" href="#bash" title="Permalink to this headline">¶</a></h2>
<p>Over the years there have been many variants of the shell program that have been developed not only for Unix but other operating systems as well (see <a class="reference external" href="https://en.wikipedia.org/wiki/Comparison_of_command_shells">comparison of shells</a>.   While there are differences between the various Unix shell programs the basic model of interaction we cover in this chapter is largely the same across all of them.   However, with respect to the exact syntax and details we will be focus on the <a class="reference external" href="https://en.wikipedia.org/wiki/Bash_(Unix_shell)">Bourne Again Shell (BASH)</a>,  as it is the default shell for Linux which is the version of Unix we use through out this book.</p>
<p>It is a Unix tradition that programs installed on the system, like Bash, include documentation on how it is used.  To access the manual pages you use the <code class="docutils literal notranslate"><span class="pre">man</span></code> program eg. <code class="docutils literal notranslate"><span class="pre">man</span> <span class="pre">man</span></code> would bring up the documentation about the manual itself.  So <code class="docutils literal notranslate"><span class="pre">man</span> <span class="pre">bash</span></code> will bring up the manual page for the bash shell.  You can find detailed coverage of the syntax and how bash works in the manual.  After we cover some basics it will be much easier to read and understand the Bash manual page as it assumes that you understand some basic Unix and generic shell concepts.</p>
</div>
<div class="section" id="shell-session">
<h2><span class="section-number">4.3. </span>Shell Session<a class="headerlink" href="#shell-session" title="Permalink to this headline">¶</a></h2>
<p>Remembering that ASCII terminals were the original devices created for humans to interactively work with computers the shell is designed to managed and communicate with a human at a terminal. Thus the human and the shell are really exchanging bytes that encoded information in ASCII.  For every new terminal connection software directs the kernel to start an instance of a shell program  to interact with a user at the terminal.  We consider this the be the start of a shell “session”.  The session ends when either the communication between the shell and the terminal is disconnected or because the user purposefully exits the shell.</p>
<div class="section" id="terminal-windows-and-the-shell">
<h3><span class="section-number">4.3.1. </span>Terminal Windows and the Shell<a class="headerlink" href="#terminal-windows-and-the-shell" title="Permalink to this headline">¶</a></h3>
<p>Today of course, we rarely use physical terminals any more.  Rather, on our physical client computers (eg. laptops, desktops, tablets, etc) we can start many terminal emulator windows to establish a shell session for each (see below). Each session will stay active until we exit or close the session and kill the associated shell.  Since each window is connected to its own shell they represent independent “conversations” in which we can do different things concurrently.</p>
<div class="cell tag_remove-input docutils container">
<div class="cell_output docutils container">
<div class="output text_html"><!-- produced by: 
htmlFig("[[{'src': '../images/UnixL01_SHCHT/041SHLLChat.png', 'cellwidth': '47.5%'}, {'src': '../images/terminalwins.png', 'cellwidth': '52%'}]]", 
        id="", 
        align="center", 
        width="100%",
        margin="auto auto auto auto",
        caption="Figure: Today terminal emulators running on our desktop act act as ASCII terminals. Every new window is a new terminal connection.", 
        captionalign="left")
-->
<table align="center" width="100%" cellpadding="0" cellspacing="0" border="0" style="border-collapse: collapse; margin: auto auto auto auto">
    <tr style="padding: 0; margin: 0;"> 
        <td colspan="1" width="47.5%" style="padding: 0; margin: 0 0 0 0; background-color:inherit;">
            <div style="padding: 0; margin: 0 0 0 0;">
              <figure style="padding: 0; margin: 0 0 0 0; width:100%;">
                   <img src="../images/UnixL01_SHCHT/041SHLLChat.png" width="100%" style="padding: 0; margin: 0;">
                </figure>
            </div>
        </td>
        <td colspan="1" width="52%" style="padding: 0; margin: 0 0 0 0; background-color:inherit;">
            <div style="padding: 0; margin: 0 0 0 0;">
              <figure style="padding: 0; margin: 0 0 0 0; width:100%;">
                   <img src="../images/terminalwins.png" width="100%" style="padding: 0; margin: 0;">
                </figure>
            </div>
        </td>
    </tr>
    <caption align="bottom" style="text-align: left; padding: 0; margin: 0;" >
          <i>Figure: Today terminal emulators running on our desktop act act as ASCII terminals. Every new window is a new terminal connection.</i> 
    </caption>
</table>
</div></div>
</div>
<blockquote>
<div><p><a class="reference internal" href="../_images/do.svg"><img alt="../_images/do.svg" class="align-left" src="../_images/do.svg" width="40" /></a> <p style="background-color:lightgreen;">  While you are learning how to work with bash it can be really useful to keep a terminal open in which you keep the bash manual page open while you use another terminal shell session to do your exploring.</p>
</div></blockquote>
</div>
</div>
<div class="section" id="line-oriented-conversation">
<h2><span class="section-number">4.4. </span>Line oriented conversation<a class="headerlink" href="#line-oriented-conversation" title="Permalink to this headline">¶</a></h2>
<p>The way we interact with the shell can be thought of as a structured, interactive, “conversation”. The conversation is a series of back and forth exchanges. We, the user, type in a request in the form of a “command line” and in response the shell takes some action and generate a particular response, as byte values, which are sent back to the terminal.  The terminal translates the response as ASCII characters displaying/printing the appropriate images to the screen so we can read it.</p>
<div class="section" id="lines">
<h3><span class="section-number">4.4.1. </span>Lines<a class="headerlink" href="#lines" title="Permalink to this headline">¶</a></h3>
<p>Given our use of ASCII what constitutes a line, in Unix, is very precise. It is a series of byte values terminated by a single ‘new-line/line-feed’ value.  Using an ASCII  table we see that the byte value for the new-line character is <code class="docutils literal notranslate"><span class="pre">0b10000010</span></code> in binary or expressed more concisely in hex as <code class="docutils literal notranslate"><span class="pre">0xA</span></code>. The common short hand notation for the newline byte value is <code class="docutils literal notranslate"><span class="pre">\n</span></code>.  Pressing the <em>return</em>  or <em>enter</em> key, depending on your keyboard, within a terminal window will generate this value.   We will simply refer to the key that generates a ‘\n’ as the <em>enter</em> key.</p>
<p>When <code class="docutils literal notranslate"><span class="pre">\n</span></code> is received by the shell it will begin working on processing the line as a command.  In this way it is line oriented.  If the user presses <code class="docutils literal notranslate"><span class="pre">\n</span></code> with no other preceding characters this is considered a blank or empty line.</p>
<p>In the other direction, the terminal emulator is configured to take the appropriate action when it receives a <code class="docutils literal notranslate"><span class="pre">\n</span></code>.  That is to say it moves the cursor to the next lower position in the window (scrolling if configured to do so) and moves it to the left edge of the new line (again scrolling the window if configured to).</p>
<blockquote>
<div><p><a class="reference internal" href="../_images/fyi.svg"><img alt="../_images/fyi.svg" class="align-left" src="../_images/fyi.svg" width="60" /></a> <p style="background-color:powderblue;"> There are two basic modes that UNIX can use when sending bytes sent from the terminal connection to the program running on the connection (so far in our case this is the shell later we will see that programs that we run from the shell can be allowed to take over this role).  The two modes are character and line.  In character mode the terminal data is sent along to the program running as soon as they are received, including the <code class="docutils literal notranslate"><span class="pre">\n</span></code>.  In line (or buffered mode) the kernel stores up the characters and sent until it receives a <code class="docutils literal notranslate"><span class="pre">\n</span></code>.   At which point it sends the complete line with the <code class="docutils literal notranslate"><span class="pre">\n</span></code> to the program running. The default mode is typically line mode.  For the most part it does not really matter to us as the shell’s behavior is largely the same as it is a line oriented program that is designed to process whole lines at a time.  However, later on this can be a source of confusion when we are writing programs that are not line oriented, rather they assume that they will see characters as soon as keys are pressed by the user.</p>
</div></blockquote>
</div>
<div class="section" id="the-prompt">
<h3><span class="section-number">4.4.2. </span>The Prompt<a class="headerlink" href="#the-prompt" title="Permalink to this headline">¶</a></h3>
<p>To visually let us know that the shell is ready for us to send it a line it sends a configurable sequence of characters which we call the prompt string or simply the prompt.  When a new connection is established it sends the prompt to the terminal so that we know that it is ready for the session/conversation to begin.  The classic prompt string is often one either the dollar symbol, <code class="docutils literal notranslate"><span class="pre">$</span></code> or greater than sign <code class="docutils literal notranslate"><span class="pre">&gt;</span></code> followed by a single space character.  In our illustrations and the default configuration we use set up the prompt to be the classic dollar sign followed by a space.</p>
<blockquote>
<div><p><a class="reference internal" href="../_images/fyi.svg"><img alt="../_images/fyi.svg" class="align-left" src="../_images/fyi.svg" width="60" /></a> <p style="background-color:powderblue;"> Today most system default to much more complicated prompt strings.  Where the prompt might state your user name, the date or time, what your current working directory is, etc.   Later when we learn about shell variables we will find out that there is a special variable <code class="docutils literal notranslate"><span class="pre">PS1</span></code> who’s value is used to generate the prompt string every time the shell want to send it.  Given that every terminal session/window is connected to separate shells can be very useful to set each one with a unique prompt to help keep you organized eg. <code class="docutils literal notranslate"><span class="pre">export</span> <span class="pre">PS1='Term</span> <span class="pre">1&gt;</span> <span class="pre">'</span></code>.
If you are interested in the details use the following <code class="docutils literal notranslate"><span class="pre">man</span> <span class="pre">bash</span></code> to pull up the manual page for bash and look for the section called “Prompting”.</p>
</div></blockquote>
</div>
</div>
<div class="section" id="our-first-shell-session">
<h2><span class="section-number">4.5. </span>Our first shell session<a class="headerlink" href="#our-first-shell-session" title="Permalink to this headline">¶</a></h2>
<p>Before we more formally explain the operation of the shell lets poke it and see how it behaves.
Perhaps the simplest thing we can do is send it an empty line by pressing <em>enter</em> on its own.
What we should find is that the terminal will move to the next line and display the prompt again.
But we want to be a little more careful to think about what happened behind the scenes so that we can build a more complete model in our mind about how the shell and terminal interactions work.</p>
<div class="cell tag_remove-input docutils container">
<div class="cell_output docutils container">
<div class="output text_html"><!-- produced by: 
htmlFig("[[{'src': '../images/UnixL01_SHCHT/06SHLLChat.png', 'caption': 'A: Press Enter', 'border': '1px solid black', 'padding': '1px', 'cellwidth': '33.33%'}, {'src': '../images/UnixL01_SHCHT/07SHLLChat.png', 'caption': 'B: Shell "blank line" input processing', 'border': '1px solid black', 'padding': '1px', 'cellwidth': '33.33%'}, {'src': '../images/UnixL01_SHCHT/08SHLLChat.png', 'caption': 'C: Shell sends Prompt back', 'border': '1px solid black', 'padding': '1px', 'cellwidth': '33.33%'}]]", 
        id="fig:shell-blankline", 
        align="center", 
        width="100%",
        margin="auto auto auto auto",
        caption="<center> Figure: Shell blank line behavior </center>", 
        captionalign="left")
-->
<table id="fig:shell-blankline" align="center" width="100%" cellpadding="0" cellspacing="0" border="0" style="border-collapse: collapse; margin: auto auto auto auto">
    <tr style="padding: 0; margin: 0;"> 
        <td colspan="1" width="33.33%" style="padding: 0; margin: 0 0 0 0; background-color:inherit;">
            <div style="padding: 1px; margin: 0 0 0 0;">
              <figure style="padding: 0; margin: 0 0 0 0; width:100%;border: 1px solid black;">
                   <img src="../images/UnixL01_SHCHT/06SHLLChat.png" width="100%" style="padding: 0; margin: 0;">
                  <figcaption>
                    <div style="background-color: inherit; margin-right:auto; margin-left:auto; text-align: center;">
                       <i style="color:inherit"> A: Press Enter</i>
                    </div>
                  </figcaption>
                </figure>
            </div>
        </td>
        <td colspan="1" width="33.33%" style="padding: 0; margin: 0 0 0 0; background-color:inherit;">
            <div style="padding: 1px; margin: 0 0 0 0;">
              <figure style="padding: 0; margin: 0 0 0 0; width:100%;border: 1px solid black;">
                   <img src="../images/UnixL01_SHCHT/07SHLLChat.png" width="100%" style="padding: 0; margin: 0;">
                  <figcaption>
                    <div style="background-color: inherit; margin-right:auto; margin-left:auto; text-align: center;">
                       <i style="color:inherit"> B: Shell "blank line" input processing</i>
                    </div>
                  </figcaption>
                </figure>
            </div>
        </td>
        <td colspan="1" width="33.33%" style="padding: 0; margin: 0 0 0 0; background-color:inherit;">
            <div style="padding: 1px; margin: 0 0 0 0;">
              <figure style="padding: 0; margin: 0 0 0 0; width:100%;border: 1px solid black;">
                   <img src="../images/UnixL01_SHCHT/08SHLLChat.png" width="100%" style="padding: 0; margin: 0;">
                  <figcaption>
                    <div style="background-color: inherit; margin-right:auto; margin-left:auto; text-align: center;">
                       <i style="color:inherit"> C: Shell sends Prompt back</i>
                    </div>
                  </figcaption>
                </figure>
            </div>
        </td>
    </tr>
    <caption align="bottom" style="text-align: left; padding: 0; margin: 0;" >
          <i><center> Figure: Shell blank line behavior </center></i> 
    </caption>
</table>
</div></div>
</div>
<p>What happened after we pressed and release the <em>enter</em> key? The terminal sent through the Unix kernel a byte to the instance of the shell program that our terminal is virtually connected too.  Precisely, it sent the binary pattern <code class="docutils literal notranslate"><span class="pre">0b10000010</span></code> or in hex <code class="docutils literal notranslate"><span class="pre">0xa</span></code> as the left most sub-figure (A) illustrates.  The <a class="reference external" href="#fig:shell-blankline">figure</a> show both the <code class="docutils literal notranslate"><span class="pre">\n</span></code> human readable ASCII symbol and the underlying byte value.  In other diagrams we might stop showing the byte values and only show the ASCII human readable symbol.  It is, however, important to remember that under the covers the terminal and shell are really just exchanging raw binary values that use the ASCII standard to encode the data.</p>
<p>The middle figure (B), cartoons the logic that the shell does in response to receiving the blank line.  Specifically, it is programmed to do “nothing”, simply sending back to the terminal the prompt so that the user knows it, the shell, is ready for another command line to be sent.  If you are interested in why the terminal displayed a <code class="docutils literal notranslate"><span class="pre">\n</span></code> causing the prompt sent by the shell to be on the next line of the terminal read the fyi ECHO box below.</p>
<blockquote>
<div><p><a class="reference internal" href="../_images/fyi.svg"><img alt="../_images/fyi.svg" class="align-left" src="../_images/fyi.svg" width="50" /></a> <p style="background-color:powderblue;"> <strong>ECHO:</strong>.  You might be wondering why is it that you see the characters you type at the keyboard of terminal appear on the screen of the terminal.  If pressing a key really sends the data to the Unix kernel and then to the program running such as the shell there is not reason we would see it.  Does the Shell send a copy back of what it received?  No it does not.  Rather typically the UNIX kernel is configured, by default, to send back a copy of what it receives on a specific terminal connection back to the terminal itself.  This is setting is called terminal ECHO mode.  So by default even before the Kernel sends data up to the destination program  it sends a copy back to the terminal so that the user can see what they typed.  This includes the <code class="docutils literal notranslate"><span class="pre">\n</span></code> that the user pressed to indicate the end of the command line.  Hence in this default mode any data send back from the shells behavior will appear on a new-line.  Programs can ask the kernel to disable this setting to have more control of what the users sees.  As a matter of fact like many things in Unix there is a command you can issue to have the kernel adjust the setting for you terminal connect including turning off the echo behavior (<code class="docutils literal notranslate"><span class="pre">stty</span> <span class="pre">-echo</span></code> to turn off and <code class="docutils literal notranslate"><span class="pre">stty</span> <span class="pre">echo</span></code> to turn back on).  Doing so lets you observe what is really being sent back in response to your command and not what the kernel automatically generated as echo data.  Note things might get confusing quickly if you turn echo off.   But Unix is all about understanding how things work and have the power to control them.  If you want to know more try <code class="docutils literal notranslate"><span class="pre">man</span> <span class="pre">stty</span></code> but be warned you will find that communications on a terminal is actually quite a bit more complex than it might seem – there is a lot of history and skeletons buried here and the kernel is <em>cooking</em> the communications quite a bit ;-)</p>
</div></blockquote>
</div>
</div>
<div class="tex2jax_ignore mathjax_ignore section" id="summary">
<h1><span class="section-number">5. </span>Summary<a class="headerlink" href="#summary" title="Permalink to this headline">¶</a></h1>
<p>Now that we have a sense for the basic model of interacting with the shell, Unix’s ASCII oriented human interface, we can go on and learn about some of the actual commands, both internal and external.  Along with the commands are common ways to use them to get things/tasks done.</p>
</div>

    <script type="text/x-thebe-config">
    {
        requestKernel: true,
        binderOptions: {
            repo: "binder-examples/jupyter-stacks-datascience",
            ref: "master",
        },
        codeMirrorConfig: {
            theme: "abcdef",
            mode: "python"
        },
        kernelOptions: {
            kernelName: "python3",
            path: "./unix"
        },
        predefinedOutput: true
    }
    </script>
    <script>kernelName = 'python3'</script>

              </div>
              
        
            <!-- Previous / next buttons -->
<div class='prev-next-area'> 
    <a class='left-prev' id="prev-link" href="files.html" title="previous page">
        <i class="fas fa-angle-left"></i>
        <div class="prev-next-info">
            <p class="prev-next-subtitle">previous</p>
            <p class="prev-next-title"><span class="section-number">3. </span>Organizing and Managing Information as a Tree of Files and Directories</p>
        </div>
    </a>
    <a class='right-next' id="next-link" href="shell.html" title="next page">
    <div class="prev-next-info">
        <p class="prev-next-subtitle">next</p>
        <p class="prev-next-title"><span class="section-number">6. </span>The Shell – Progammable User Interface to the computer</p>
    </div>
    <i class="fas fa-angle-right"></i>
    </a>
</div>
        
        </div>
    </div>
    <footer class="footer">
    <div class="container">
      <p>
        
          By Jonathan Appavoo<br/>
        
            &copy; Copyright 2021.<br/>
      </p>
    </div>
  </footer>
</main>


      </div>
    </div>
  
  <script src="../_static/js/index.be7d3bbb2ef33a8344ce.js"></script>

  </body>
</html>